@model TodoListMVC.ViewModels.TodoListViewModel

@{
    ViewData["Title"] = "Todo List";
}

<div class="container mt-5">
    <div class="row justify-content-center mb-4">
        <div class="col-12 col-md-8">
            <h1 class="display-4 text-primary text-center">My Todo List</h1>
            <p class="text-center">
                <a asp-action="Create" class="btn btn-lg btn-success rounded-pill shadow-lg">Add New Task</a>
            </p>
        </div>
    </div>

    <!-- Display success or error messages from TempData -->
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success text-center mb-4 shadow-lg">
            @TempData["Message"]
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center mb-4 shadow-lg">
            @TempData["Error"]
        </div>
    }

    <div class="row justify-content-center">
        <div class="col-12 col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="text-muted">Tasks</h3>
                <div class="d-flex align-items-center">
                    <span class="me-3 text-muted">Page: @Model.CurrentPage of @Model.TotalPages</span>
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" class="btn btn-sm btn-outline-primary rounded-pill @(!Model.HasPreviousPage ? "disabled" : "")">
                        <i class="bi bi-chevron-left"></i> Previous
                    </a>
                    <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" class="btn btn-sm btn-outline-primary rounded-pill @(!Model.HasNextPage ? "disabled" : "")">
                        Next <i class="bi bi-chevron-right"></i>
                    </a>
                </div>
            </div>

            <div class="list-group">
                @if (!Model.Items.Any())
                {
                    <div class="text-center my-4">
                        <p class="text-muted">No tasks found. Add a new task to get started!</p>
                    </div>
                }
                else
                {
                    @foreach (var item in Model.Items)
                    {
                        string priorityClass = item.Priority switch
                        {
                            1 => "priority-low",
                            3 => "priority-high",
                            _ => "priority-medium"
                        };

                        string priorityText = item.Priority switch
                        {
                            1 => "Low",
                            3 => "High",
                            _ => "Medium"
                        };

                        bool isPastDue = item.DueDate.HasValue && item.DueDate < DateTime.Now && !item.IsCompleted;

                        <div class="list-group-item todo-item d-flex justify-content-between align-items-center rounded-lg shadow-sm mb-3 @priorityClass @(item.IsCompleted ? "completed" : "")">
                            <div class="d-flex align-items-center">
                                <div class="form-check me-3">
                                    <form asp-action="Edit" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <input type="hidden" name="IsCompleted" value="@(item.IsCompleted ? "false" : "true")" />
                                        <input class="form-check-input toggle-complete" type="checkbox" onclick="this.form.submit();" @(item.IsCompleted ? "checked" : "") />
                                    </form>
                                </div>
                                <div>
                                    <h5 class="mb-1 text-dark">@item.Title</h5>
                                    <p class="mb-1 text-muted">@item.Description</p>
                                </div>
                            </div>
                            <div class="text-end">
                                <span class="badge rounded-pill bg-@priorityText.ToLower()">@priorityText</span>
                                <div class="text-muted @(isPastDue ? "text-danger" : "")">
                                    @(item.DueDate.HasValue ? item.DueDate.Value.ToString("g") : "No due date")
                                </div>
                                <div class="mt-2">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info rounded-pill">Details</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger rounded-pill">Delete</a>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
